<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Banzai.Log4Net</name>
    </assembly>
    <members>
        <member name="T:Banzai.Log4Net.Log4NetWriter">
            <summary>
            ILogWriter implementation provided by Log4Net.
            </summary>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.#ctor(System.Type)">
            <summary>
            Constructs a new Log4NetWriter.
            </summary>
            <param name="type">Type for which the writer will log.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Fatal(System.String,System.Exception)">
            <summary>
            Log a fatal error.
            </summary>
            <param name="message">Message to log.</param>
            <param name="exception">Exception associated with the error.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Fatal(System.String,System.Object[])">
            <summary>
            Log a fatal exception.  
            </summary>
            <param name="format">Format of the message.  Defers format until logging level is assessed.</param>
            <param name="formatArgs">Args to be formatted into the message format.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Fatal(System.Func{System.String},System.Exception)">
            <summary>
            Log a fatal exception.
            </summary>
            <param name="deferredWrite">Defers the write operation until logging level is assessed. 
            Can be useful when expensive concatenation operations are required.</param>
            <param name="exception">Exception associated with the error.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Error(System.String,System.Exception)">
            <summary>
            Log an error.
            </summary>
            <param name="message">Message to log.</param>
            <param name="exception">Exception associated with the error.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Error(System.String,System.Object[])">
            <summary>
            Log an error.  
            </summary>
            <param name="format">Format of the message.  Defers format until logging level is assessed.</param>
            <param name="formatArgs">Args to be formatted into the message format.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Error(System.Func{System.String},System.Exception)">
            <summary>
            Log an error.
            </summary>
            <param name="deferredWrite">Defers the write operation until logging level is assessed. 
            Can be useful when expensive concatenation operations are required.</param>
            <param name="exception">Exception associated with the error.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Warn(System.String,System.Exception)">
            <summary>
            Log a warning.
            </summary>
            <param name="message">Message to log.</param>
            <param name="exception">Exception associated with the error.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Warn(System.String,System.Object[])">
            <summary>
            Log a warning. 
            </summary>
            <param name="format">Format of the message.  Defers format until logging level is assessed.</param>
            <param name="formatArgs">Args to be formatted into the message format.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Warn(System.Func{System.String},System.Exception)">
            <summary>
            Log a warning.
            </summary>
            <param name="deferredWrite">Defers the write operation until logging level is assessed. 
            Can be useful when expensive concatenation operations are required.</param>
            <param name="exception">Exception associated with the error.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Info(System.String,System.Exception)">
            <summary>
            Log an informational message.
            </summary>
            <param name="message">Message to log.</param>
            <param name="exception">Exception associated with the error.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Info(System.String,System.Object[])">
            <summary>
            Log an info message.
            </summary>
            <param name="format">Format of the message.  Defers format until logging level is assessed.</param>
            <param name="formatArgs">Args to be formatted into the message format.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Info(System.Func{System.String},System.Exception)">
            <summary>
            Log an info message.
            </summary>
            <param name="deferredWrite">Defers the write operation until logging level is assessed. 
            Can be useful when expensive concatenation operations are required.</param>
            <param name="exception">Exception associated with the error.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Debug(System.String,System.Exception)">
            <summary>
            Log a debug message.
            </summary>
            <param name="message">Message to log.</param>
            <param name="exception">Exception associated with the error.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Debug(System.String,System.Object[])">
            <summary>
            Log a debug message.  
            </summary>
            <param name="format">Format of the message.  Defers format until logging level is assessed.</param>
            <param name="formatArgs">Args to be formatted into the message format.</param>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriter.Debug(System.Func{System.String},System.Exception)">
            <summary>
            Log a debug message.
            </summary>
            <param name="deferredWrite">Defers the write operation until logging level is assessed. 
            Can be useful when expensive concatenation operations are required.</param>
            <param name="exception">Exception associated with the error.</param>
        </member>
        <member name="T:Banzai.Log4Net.Log4NetWriterFactory">
            <summary>
            Log4Net implementation of ILogWriterFactory.  Used to provide a Log4Net ILogWriter.
            </summary>
        </member>
        <member name="M:Banzai.Log4Net.Log4NetWriterFactory.GetLogger(System.Type)">
            <summary>
            Gets a log writer based on the passed type.
            </summary>
            <param name="type">Type for which to get a log writer.</param>
            <returns>An ILogWriter</returns>
        </member>
    </members>
</doc>
