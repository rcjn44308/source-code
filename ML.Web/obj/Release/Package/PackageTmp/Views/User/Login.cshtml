@model ML.Web.Models.LoginViewModel
@{
    ViewBag.Title = "Web Login";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<div class="login-container">

    <div class="col-md-4 col-md-offset-8 login-form" style="padding-top:20px">
        <div class="login-alert">
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissable">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <strong>@TempData["Error"].ToString()</strong>
                </div>
            }
        </div>
        @using (Html.BeginForm("Authenticate", "User", FormMethod.Post, new { @class = "login-form" }))
        {
            @Html.AntiForgeryToken()
            <h3>Login</h3>
            <div class="left-inner-addon">
                @Html.TextBoxFor(x => x.Username, new { @class = "form-control", @placeholder = "Username", @autofocus = "autofocus" })
                <span class="field-error-msg">
                    @Html.ValidationMessageFor(x => x.Username)
                </span>
            </div>
            <div class="left-inner-addon">
                @Html.PasswordFor(x => x.Password, new { @class = "form-control", @placeholder = "Password" })
                <span class="field-error-msg">
                    @Html.ValidationMessageFor(x => x.Password)
                </span>
            </div>
            @Html.HiddenFor(x => x.RedirectUrl)
            <input type="submit" value="Login" class="btn btn-primary form-control btn-block" />
        }
        <br/>
        <div class="text-center" style="font-size: 15px;">
            @Html.ActionLink("Create an account","Register","User")
        </div>
    </div>
</div>